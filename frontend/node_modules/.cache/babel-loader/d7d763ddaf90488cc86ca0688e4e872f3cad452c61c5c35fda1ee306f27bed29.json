{"ast":null,"code":"// utils/sync.js\nimport { postSale } from '../services/api';\nexport const syncPendingSales = async () => {\n  const pending = JSON.parse(localStorage.getItem('pending_sales') || '[]');\n  if (pending.length === 0) return;\n  for (const sale of pending) {\n    try {\n      await postSale(sale);\n    } catch (error) {\n      console.error('❌ Sync failed:', error);\n      throw error; // make App.jsx show \"Failed to sync\" if one fails\n    }\n  }\n\n  // Clear pending sales if all succeed\n  localStorage.removeItem('pending_sales');\n};","map":{"version":3,"names":["postSale","syncPendingSales","pending","JSON","parse","localStorage","getItem","length","sale","error","console","removeItem"],"sources":["/home/akyii/micro-pos-app/frontend/src/utils/sync.js"],"sourcesContent":["// utils/sync.js\nimport { postSale } from '../services/api';\n\nexport const syncPendingSales = async () => {\n  const pending = JSON.parse(localStorage.getItem('pending_sales') || '[]');\n  if (pending.length === 0) return;\n\n  for (const sale of pending) {\n    try {\n      await postSale(sale);\n    } catch (error) {\n      console.error('❌ Sync failed:', error);\n      throw error; // make App.jsx show \"Failed to sync\" if one fails\n    }\n  }\n\n  // Clear pending sales if all succeed\n  localStorage.removeItem('pending_sales');\n};\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,iBAAiB;AAE1C,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC;EACzE,IAAIJ,OAAO,CAACK,MAAM,KAAK,CAAC,EAAE;EAE1B,KAAK,MAAMC,IAAI,IAAIN,OAAO,EAAE;IAC1B,IAAI;MACF,MAAMF,QAAQ,CAACQ,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;;EAEA;EACAJ,YAAY,CAACM,UAAU,CAAC,eAAe,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}